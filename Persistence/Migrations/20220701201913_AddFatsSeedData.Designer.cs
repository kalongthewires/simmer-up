// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220701201913_AddFatsSeedData")]
    partial class AddFatsSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Fat", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DbCreateTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DbLastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("SmokePointCelsius")
                        .HasColumnType("integer");

                    b.Property<int>("SmokePointFahrenheit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Fats");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DbCreateTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8919),
                            DbLastModifiedTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8920),
                            Description = "",
                            Guid = new Guid("46f11f51-511a-4bb4-ad49-dbe3436a5102"),
                            Name = "extra virgin olive oil",
                            SmokePointCelsius = 0,
                            SmokePointFahrenheit = 375
                        },
                        new
                        {
                            Id = 2L,
                            DbCreateTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8927),
                            DbLastModifiedTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8928),
                            Description = "",
                            Guid = new Guid("470d7ac3-f921-47da-aeab-c544dffd8332"),
                            Name = "butter",
                            SmokePointCelsius = 177,
                            SmokePointFahrenheit = 350
                        },
                        new
                        {
                            Id = 3L,
                            DbCreateTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8931),
                            DbLastModifiedTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8931),
                            Guid = new Guid("ee867dda-7a2e-4844-8d89-154127b26612"),
                            Name = "clarified butter",
                            SmokePointCelsius = 252,
                            SmokePointFahrenheit = 485
                        },
                        new
                        {
                            Id = 4L,
                            DbCreateTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8933),
                            DbLastModifiedTimestamp = new DateTime(2022, 7, 1, 20, 19, 12, 961, DateTimeKind.Utc).AddTicks(8933),
                            Guid = new Guid("ee867dda-7a2e-4844-8d89-154127b26612"),
                            Name = "canola oil",
                            SmokePointCelsius = 204,
                            SmokePointFahrenheit = 400
                        });
                });

            modelBuilder.Entity("Domain.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DbCreateTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DbLastModifiedTimestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
